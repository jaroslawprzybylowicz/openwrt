From dbaf4754f07c07cab1fc84bd011c2ee3f85a4cbf Mon Sep 17 00:00:00 2001
From: Lukasz Majczak <lukaszm@marvell.com>
Date: Thu, 3 Oct 2019 18:41:30 +0200
Subject: [PATCH 342/345] [PATCH UEK5-U2] MIPS: octeon: shared_cpu_map
 cacheinfo

Prior to commit eb0cbe670050 ("mips: fix cacheinfo"),
/sys/devices/system/cpu/cpu0/cache was not populated.
After that commit /sys/devices/system/cpu/cpu0/cache
was populated, but the shared_cpu_map file was missing,
because arch/mips/kernel/cacheinfo.c doesn't populate
cachinfo.shared_cpu_map.

arch/mips/cavium-octeon/cacheinfo.c would, but it has other
problems and doesn't run. See commit 3733a13f1dba ("MIPS:
Octeon: cache info: Delete cavium-octeon/cacheinfo.c").
This patch populates cachinfo.shared_cpu_map using the
same rules as arch/mips/cavium-octeon/cacheinfo.c when
CONFIG_CAVIUM_OCTEON_SOC is defined.

Jira: LINUX-3095

Change-Id: I33982a8cb9a0d8d31173c60d3d601f68388e4294
Signed-off-by: Henry Willard <henry.willard@oracle.com>
---
 arch/mips/kernel/cacheinfo.c | 22 ++++++++++++++++++++++
 1 file changed, 22 insertions(+)

diff --git a/arch/mips/kernel/cacheinfo.c b/arch/mips/kernel/cacheinfo.c
index 97d5239ca47b..a87c7c18cc28 100644
--- a/arch/mips/kernel/cacheinfo.c
+++ b/arch/mips/kernel/cacheinfo.c
@@ -14,6 +14,28 @@
  * along with this program.  If not, see <http://www.gnu.org/licenses/>.
  */
 #include <linux/cacheinfo.h>
+#ifdef CONFIG_CAVIUM_OCTEON_SOC
+/*
+ * This matches what arch/mips/cavium-octeon/cacheinfo.c
+ * would do to populate shared_cpu_map. Without this
+ * /sys/devices/system/cpu/cpu0/cache/index0/shared_cpu_map
+ * will be missing and things that want or need it, like
+ * lscpu, won't function.
+ *
+ * arch/mips/cavium-octeon/cacheinfo.c didn't run because
+ * it was incompatible with the current architecture.
+ */
+static inline void populate_shared_cpu_map(uint cpu, struct cacheinfo *leaf)
+{
+	if (leaf->level == 1)
+		cpumask_set_cpu(cpu, &leaf->shared_cpu_map);
+	if (leaf->level == 2)
+		cpumask_copy(&leaf->shared_cpu_map, cpu_possible_mask);
+}
+#else
+static inline void populate_shared_cpu_map(uint cpu, struct cacheinfo *leaf)
+{}
+#endif
 
 /* Populates leaf and increments to next leaf */
 #define populate_cache(cache, leaf, c_level, c_type)		\
-- 
2.25.1

