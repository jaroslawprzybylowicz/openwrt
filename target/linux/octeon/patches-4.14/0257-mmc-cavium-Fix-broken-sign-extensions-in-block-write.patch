From 8d4735e7dbf4f1e9c6a6911f3b54decf7e6a8c60 Mon Sep 17 00:00:00 2001
From: David Daney <david.daney@cavium.com>
Date: Sun, 19 May 2019 12:00:46 +0200
Subject: [PATCH 257/345] mmc: cavium:  Fix broken sign extensions in block
 write code.

Somewhere the (u64) cast was lost.  This causes data corruption on
single block write operations.

Also add a check to bail out of the interrupt handler if no conditions
are signaled.

Signed-off-by: David Daney <david.daney@cavium.com>
---
 drivers/mmc/host/cavium.c | 12 ++++++++++--
 1 file changed, 10 insertions(+), 2 deletions(-)

diff --git a/drivers/mmc/host/cavium.c b/drivers/mmc/host/cavium.c
index fbd29f00fca0..dd4aa1cb0330 100644
--- a/drivers/mmc/host/cavium.c
+++ b/drivers/mmc/host/cavium.c
@@ -444,8 +444,16 @@ irqreturn_t cvm_mmc_interrupt(int irq, void *dev_id)
 	else
 		__acquire(&host->irq_handler_lock);
 
-	/* Clear interrupt bits (write 1 clears ). */
 	emm_int = readq(host->base + MIO_EMM_INT(host));
+	/*
+	 * Multiple interrupts are handled here, so it is possible
+	 * that the condition for this invocation was already handled
+	 * by a previous interrupt.  If there is nothing pending, it
+	 * must have previously been handled so just exit.
+	 */
+	if (!emm_int)
+		goto out;
+	/* Clear interrupt bits (write 1 clears ). */
 	writeq(emm_int, host->base + MIO_EMM_INT(host));
 
 	if (emm_int & MIO_EMM_INT_SWITCH_ERR)
@@ -733,7 +741,7 @@ static void do_write_request(struct cvm_mmc_host *host, struct mmc_request *mrq)
 		}
 
 		while (smi->consumed < smi->length && shift >= 0) {
-			dat |= (u64)((u8 *)smi->addr)[smi->consumed] << shift;
+			dat |= ((u64)((u8 *)smi->addr)[smi->consumed]) << shift;
 			bytes_xfered++;
 			smi->consumed++;
 			shift -= 8;
-- 
2.25.1

