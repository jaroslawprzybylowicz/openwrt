From 8af7c1c7a3cf3f3638a6625a400f09e283fe1a81 Mon Sep 17 00:00:00 2001
From: Chandrakala Chavva <cchavva@caviumnetworks.com>
Date: Sat, 4 May 2019 18:19:46 +0200
Subject: [PATCH 166/345] MIPS: OCTEON: Keep reset value for COP0_ERRCTL

The COP0_ERRCTL used for checking dcache, TLB, write_buffer parity errors.
Their are other bits with some reset value.

Signed-off-by: Chandrakala Chavva <cchavva@caviumnetworks.com>
---
 arch/mips/cavium-octeon/octeon-error-injector.c | 16 ++++++++++------
 arch/mips/cavium-octeon/setup.c                 |  8 +++++---
 arch/mips/mm/c-octeon.c                         |  4 ++--
 arch/mips/mm/cex-oct.S                          |  3 ++-
 drivers/edac/octeon_edac-pc.c                   |  8 +++++---
 5 files changed, 24 insertions(+), 15 deletions(-)

diff --git a/arch/mips/cavium-octeon/octeon-error-injector.c b/arch/mips/cavium-octeon/octeon-error-injector.c
index 5529de739e7f..1cf4b7001725 100644
--- a/arch/mips/cavium-octeon/octeon-error-injector.c
+++ b/arch/mips/cavium-octeon/octeon-error-injector.c
@@ -25,17 +25,21 @@ MODULE_PARM_DESC(test_param, "Parameter used in the test case.");
 
 static void octeon_error_injector_l1_dcache_parity(void)
 {
-	if (OCTEON_IS_OCTEON3())
-		write_octeon_c0_errctl(1ull<<11);
-	else if (OCTEON_IS_OCTEON2())
+	if (OCTEON_IS_OCTEON3()) {
+		u64 errctl = read_octeon_c0_errctl();
+		errctl |= (1ull << 11);
+		write_octeon_c0_errctl(errctl);
+	} else if (OCTEON_IS_OCTEON2())
 		write_octeon_c0_dcacheerr(1ull<<3);
 }
 
 static void octeon_error_injector_tlb_parity(void)
 {
-	if (OCTEON_IS_OCTEON3())
-		write_octeon_c0_errctl(1ull<<15);
-	else if (OCTEON_IS_OCTEON2())
+	if (OCTEON_IS_OCTEON3()) {
+		u64 errctl = read_octeon_c0_errctl();
+		errctl |= (1ull << 15);
+		write_octeon_c0_errctl(errctl);
+	} else if (OCTEON_IS_OCTEON2())
 		write_octeon_c0_dcacheerr(1ull<<6);
 }
 
diff --git a/arch/mips/cavium-octeon/setup.c b/arch/mips/cavium-octeon/setup.c
index 632a037bfabb..8d2c7b9be231 100644
--- a/arch/mips/cavium-octeon/setup.c
+++ b/arch/mips/cavium-octeon/setup.c
@@ -324,9 +324,11 @@ void octeon_check_cpu_bist(void)
 		pr_err("Core%d BIST Failure: COP0_CVM_MEM_CTL = 0x%llx\n",
 		       coreid, bist_val);
 
-	if (current_cpu_type() == CPU_CAVIUM_OCTEON3)
-		write_octeon_c0_errctl(1);
-	else
+	if (current_cpu_type() == CPU_CAVIUM_OCTEON3) {
+		bist_val = read_octeon_c0_errctl();
+		bist_val |= 1;
+		write_octeon_c0_errctl(bist_val);
+	} else
 		write_octeon_c0_dcacheerr(0);
 }
 
diff --git a/arch/mips/mm/c-octeon.c b/arch/mips/mm/c-octeon.c
index d88d2f00fffa..859cbceb47c5 100644
--- a/arch/mips/mm/c-octeon.c
+++ b/arch/mips/mm/c-octeon.c
@@ -273,7 +273,7 @@ static int octeon3_be_handler(struct pt_regs *regs, int is_fixup)
 			pr_err("CacheErr (Dcache) == %llx\n", dcache_err);
 		}
 
-		write_octeon_c0_errctl(wbfperr_mask);
+		write_octeon_c0_errctl(dcache_err | wbfperr_mask);
 		return MIPS_BE_FATAL;
 	}
 	if (is_fixup)
@@ -296,7 +296,7 @@ static int octeon3_mcheck_handler(struct pt_regs *regs)
 		union octeon_cvmemctl cvmmemctl;
 
 		/* Clear the indicator */
-		write_octeon_c0_errctl(tlbperr_mask);
+		write_octeon_c0_errctl(dcache_err | tlbperr_mask);
 		/*
 		 * Blow everything away to (hopefully) write good
 		 * parity to all TLB entries
diff --git a/arch/mips/mm/cex-oct.S b/arch/mips/mm/cex-oct.S
index 847b101c4d7b..ee204536952f 100644
--- a/arch/mips/mm/cex-oct.S
+++ b/arch/mips/mm/cex-oct.S
@@ -70,7 +70,8 @@
 
 	dmfc0	k0, CP0_ERRCTL
 	sd	k0, (k1)
-	andi	k0, 1		/* Write 1 to clear Dcache parity error */
+	ori	k0, k0, 1
+	xori	k0, k0, 1		/* clear Dcache parity error */
 	dmtc0	k0, CP0_ERRCTL
 
 	/* check whether this is a nested exception */
diff --git a/drivers/edac/octeon_edac-pc.c b/drivers/edac/octeon_edac-pc.c
index fdf35f9ed39c..458fceb63a15 100644
--- a/drivers/edac/octeon_edac-pc.c
+++ b/drivers/edac/octeon_edac-pc.c
@@ -88,9 +88,11 @@ static int  co_cache_error_event(struct notifier_block *this,
 			edac_device_handle_ce(p->ed, cpu, 0, "dcache");
 
 		/* Clear the error indication */
-		if (current_cpu_type() == CPU_CAVIUM_OCTEON3)
-			write_octeon_c0_errctl(1);
-		else if (current_cpu_type() == CPU_CAVIUM_OCTEON2)
+		if (current_cpu_type() == CPU_CAVIUM_OCTEON3) {
+			u64 errctl = read_octeon_c0_errctl();
+			errctl |= 1;
+			write_octeon_c0_errctl(errctl);
+		} else if (current_cpu_type() == CPU_CAVIUM_OCTEON2)
 			write_octeon_c0_dcacheerr(1);
 		else
 			write_octeon_c0_dcacheerr(0);
-- 
2.25.1

